sudo: required
# language: node_js
# node_js:
#   - "10"
services:
    - docker

# Build development version of client where we have access to test suite
before_install:
  # - npm i -g npm@^6
  - docker build -t oneryalcin/react-test -f ./client/Dockerfile.dev ./client

# run tests for client
script:
  - docker run -e CI=true oneryalcin/react-test npm run test -- --watchAll=false
  # - docker run oneryalcin/react-test npm test -- --coverage

# Once test are all good and passing, go ehead and create production version of images
after_success:
  - docker build -t oneryalcin/multi-client ./client
  - docker build -t oneryalcin/multi-nginx ./nginx
  - docker build -t oneryalcin/multi-server ./server
  - docker build -t oneryalcin/multi-worker ./worker
  # Log in to the docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # Push prod version of images to dockerhub
  - docker push oneryalcin/multi-client
  - docker push oneryalcin/multi-nginx
  - docker push oneryalcin/multi-server
  - docker push oneryalcin/multi-worker

deploy:
  provider: elasticbeanstalk
  region: us-east-1
  app: multi-docker
  env: MultiDocker-env
  bucket_name: elasticbeanstalk-us-east-1-858541932570
  bucket_path: docker-multi
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key:
    secure: $AWS_SECRET_KEY

